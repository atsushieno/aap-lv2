name: build dist

on:
  push:
  pull_request:

jobs:
  linux-build:
    name: build on linux
    runs-on: ubuntu-20.04
    steps:
    - name: checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: apt update
      run: |
        sudo apt-get update
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin
    # ONLY FOR NEW RELEASE TAGS
    - name: setup gpg necessities
      if: startsWith(github.ref, 'refs/tags/')
      run: sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > $WORKSPACE/'$SIGNING_SECRET_KEY_RING_FILE'"
      env:
        WORKSPACE: ${{ github.workspace }}
        GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}
        SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
    # ONLY FOR NEW RELEASE TAGS
    - name: rewrite publish-pom.gradle to require signing
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        sed -i "s/signing {}/signing { sign(publishing.publications) }/" publish-pom.gradle
    - name: cache AVD
      uses: actions/cache@v3
      env:
        cache-name: cache-avd
      with:
        path: /home/runner/.android/gradle/avd
        key: ${{ runner.os }}-gradle-avd
    - name: cache gradle caches
      uses: actions/cache@v3
      env:
        cache-name: cache-gradle-caches
      with:
        path: /home/runner/.gradle/caches/
        key: ${{ runner.os }}-gradle-caches
    - name: apt install
      run: |
        echo y | sudo apt-get install doxygen libgrpc++-dev libgrpc-dev libprotobuf-dev protobuf-compiler protobuf-compiler-grpc graphviz cmake ninja-build liblilv-dev
    - name: build
      run: make
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SIGNING_SECRET_KEY_RING_FILE: ${{ format('{0}/{1}', github.workspace, secrets.SIGNING_SECRET_KEY_RING_FILE) }}
    # ONLY FOR NEW RELEASE TAGS
    - name: publish
      if: startsWith(github.ref, 'refs/tags/')
      run: ./gradlew --warning-mode all publish
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SIGNING_SECRET_KEY_RING_FILE: ${{ format('{0}/{1}', github.workspace, secrets.SIGNING_SECRET_KEY_RING_FILE) }}
    - name: upload artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: aap-lv2-apps-and-libs
        path:
          ./androidaudioplugin-lv2/build/outputs/aar/androidaudioplugin-lv2-debug.aar
          ./aap-ayumi/build/outputs/apk/debug/aap-ayumi-debug.apk
  
  osx-build:
    name: build on osx
    runs-on: macos-12
    steps:
    - name: checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: cache AVD
      uses: actions/cache@v3
      env:
        cache-name: cache-avd
      with:
        path: /Users/runner/.android/gradle/avd
        key: ${{ runner.os }}-gradle-avd
    - name: cache gradle caches
      uses: actions/cache@v3
      env:
        cache-name: cache-gradle-caches
      with:
        path: /Users/runner/.gradle/caches/
        key: ${{ runner.os }}-gradle-caches
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin
    - name: install deps
      run: |
        brew install doxygen ninja graphviz lilv grpc
    - name: build
      run: make
      env:
        ANDROID_SDK_ROOT: /Users/runner/Library/Android/sdk
